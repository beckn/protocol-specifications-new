openapi: 3.1.1
info:
  title: Beckn Transction APIs Offer & Order â€” Enhanced Core (schema.org aligned)
  version: 1.0.1
  description: >
    Transaction API s with Core Offer + Order with stable fields, JSON-LD mapping to schema.org, and attachment points for Attribute Packs (offerAttributes, orderAttributes, itemAttributes).

x-spec-refs:
  DISCOVERY_SPEC_URL: ./discover.yaml    

paths:
  /beckn/select:
    post:
      summary: "Buyer selects items/offers \u2014 returns priced order"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: select
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/on_select:
    post:
      summary: Provider returns priced order (quote)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: on_select
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'
  
  
  /beckn/init:
    post:
      summary: Initialize order (party details, fulfillment mode, payment intent)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: init
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/on_init:
    post:
      summary: Provider echoes initialized order (with refs populated)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: on_init
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/confirm:
    post:
      summary: Confirm order (final selections; payment/fulfillment committed)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: confirm
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/on_confirm:
    post:
      summary: Provider returns confirmed order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: on_confirm
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/status:
    post:
      summary: Fetch order status by id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: status
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      oneOf:
                      - type: object
                        required:
                        - beckn:id
                        properties:
                          beckn:id:
                            $ref: '../schema/core/v2/core.yaml#/components/schemas/Order/properties/beckn:id'
                      - $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/on_status:
    post:
      summary: Provider returns current order (or tracking via fulfillment packs)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: on_status
                message:
                  type: object
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
                  anyOf:
                  - required:
                    - order
                  - required: []
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/update:
    post:
      summary: Request order mutation (replace, cancel line, address change, etc.)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: update
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/on_update:
    post:
      summary: Provider returns mutated order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: on_update
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/cancel:
    post:
      summary: Request to cancel an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: cancel
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      oneOf:
                      - type: object
                        required:
                        - beckn:id
                        properties:
                          beckn:id:
                            $ref: '../schema/core/v2/core.yaml#/components/schemas/Order/properties/beckn:id'
                      - $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'
          
  /beckn/on_cancel:
    post:
      summary: Provider returns cancelled order (may reflect refund/payment update
        via PaymentRef)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - context
              - message
              properties:
                context:
                  allOf:
                  - $ref: '#/components/schemas/TransactionContext'
                  - type: object
                    properties:
                      action:
                        const: on_cancel
                message:
                  type: object
                  required:
                  - order
                  properties:
                    order:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/support:
    post:
      summary: Request support details for an entity (order/item/provider/etc.)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [context, message]
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/TransactionContext'
                    - type: object
                      properties:
                        action:
                          const: support
                message:
                  type: object
                  required: [ref_id]
                  properties:
                    ref_id:
                      type: string
                      description: ID of the entity for which support is requested (order/item/fulfillment/provider/agent).  # legacy kept minimal
                    ref_type:
                      type: string
                      description: Optional hint to help route support.
                      enum: [order, fulfillment, item, provider, agent, other]
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/on_support:
    post:
      summary: Provider returns support details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [context, message]
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/TransactionContext'
                    - type: object
                      properties:
                        action:
                          const: on_support
                message:
                  type: object
                  required: [support]
                  properties:
                    support:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/SupportInfo'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/track:
    post:
      summary: Request tracking handle/link for an active order/fulfillment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [context, message]
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/TransactionContext'
                    - type: object
                      properties:
                        action:
                          const: track
                message:
                  type: object
                  required: [order_id]
                  properties:
                    order_id:
                      type: string
                      description: Identifier of the order being tracked.
                    fulfillment_id:
                      type: string
                      description: Optional fulfillment leg to track (if multiple).
                    mode_hint:
                      type: string
                      description: Optional delivery mode for the tracking handle.
                      enum: [link_only, deep_link, webhook, ws_handle]
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/on_track:
    post:
      summary: Provider returns tracking handle/link and status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [context, message]
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/TransactionContext'
                    - type: object
                      properties:
                        action:
                          const: on_track
                message:
                  type: object
                  required: [tracking]
                  properties:
                    tracking:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Tracking'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/rating:
    post:
      summary: Submit a rating (optionally with feedback) for an entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [context, message]
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/TransactionContext'
                    - type: object
                      properties:
                        action:
                          const: rating
                message:
                  $ref: '../schema/core/v2/core.yaml#/components/schemas/RatingInput'
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'

  /beckn/on_rating:
    post:
      summary: Provider acknowledges/returns rating receipt (optional aggregate snapshot)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [context, message]
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/TransactionContext'
                    - type: object
                      properties:
                        action:
                          const: on_rating
                message:
                  type: object
                  properties:
                    received:
                      type: boolean
                      default: true
                    aggregate:
                      type: object
                      description: Optional current aggregate rating snapshot.
                      properties:
                        count: { type: integer, minimum: 0 }
                        value: { type: number, minimum: 0 }
                        best:  { type: number, minimum: 0 }
                        worst: { type: number, minimum: 0 }
                    feedbackForm:
                      $ref: '../schema/core/v2/core.yaml#/components/schemas/Form'
                      description: Optional feedback form for additional detailed feedback collection
      responses:
        '200':
          $ref: '#/components/responses/Ack200'
        '400':
          $ref: '#/components/responses/Ack400'
        '500':
          $ref: '#/components/responses/Ack500'


components:
  schemas:
    TransactionContext:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/refs/heads/master/api/transaction/build/transaction.yaml#/components/schemas/Context'
        - type: object
          description: >
            Beckn Context extended for Transaction flows. Mirrors DiscoveryContext pattern to
            enable validation and per-endpoint action constraints. network_id/schema_context
            are optional for routing and JSON-LD hints.
          properties:
            network_id:
              type: array
              items: { type: string }
              description: Optional list of addressed networks (for routing/allowlisting)
            schema_context:
              type: array
              items:
                type: string
                format: uri
              description: Optional JSON-LD context URLs relevant to the items/offers in this transaction

    # --------------------------------
    # Core schemas (referenced from core.yaml)
    # --------------------------------
    Order:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/Order'
    
    OrderItem:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/OrderItem'
    
    Invoice:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/Invoice'
    
    Fulfillment:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/Fulfillment'
    
    TrackAction:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/TrackAction'
    
    Payment:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/Payment'
    
    Party:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/Party'
    
    SupportInfo:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/SupportInfo'
    
    Tracking:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/Tracking'
    
    RatingInput:
      $ref: '../schema/core/v2/core.yaml#/components/schemas/RatingInput'            

  responses:
    Ack200:
      description: "ACK â€” request received (validation passed)"
      content:
        application/json:
          schema:
            $ref: '../schema/core/v2/core.yaml#/components/schemas/AckResponse'
          examples:
            success_ack:
              $ref: './discover.yaml#/components/examples/ack_success'

    Ack400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '../schema/core/v2/core.yaml#/components/schemas/AckResponse'
          examples:
            bad_request:
              $ref: './discover.yaml#/components/examples/ack_bad_request'

    Ack500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '../schema/core/v2/core.yaml#/components/schemas/AckResponse'
          examples:
            server_error:
              $ref: './discover.yaml#/components/examples/ack_server_error'