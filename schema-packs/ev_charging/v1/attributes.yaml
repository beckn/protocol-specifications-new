openapi: 3.1.1
info:
  title: EV Charging — Charging Service Attribute Pack (v1)
  version: 1.0.0
  x-profile-id: profiles/ev-charging/ev_charging/v1
  description: >
    Attribute schemas for EV charging services (Item.attributes), offers (Offer.attributes),
    sessions (Order/Fulfillment attributes), and providers (Provider.attributes).

    NOTES:
    • This pack only defines attributes that are NOT already modeled by core Beckn schemas.
    • Core fields (name/descriptor, images/URL, category, availableAt/location, validity windows,
      item availability window, offer price snapshot, eligibility, order state, fulfillment start/end times, etc.)
      should be taken from the core Beckn objects (Catalog/Item/Offer/Order/Fulfillment).
    • Where applicable, this pack REUSES core schemas via $ref to the forked specs you provided.

components:
  schemas:
    ########################################################################
    # ITEM.ATTRIBUTES — ChargingService (pruned; EV-specific only)
    ########################################################################
    ChargingService:
      type: object
      additionalProperties: false
      required:
        - connectorType
        - maxPowerKW
        - socketCount
      x-jsonld:
        "@context": ./context.jsonld
        "@type": ChargingService
      properties:

        # EV-specific technicals
        connectorType:
          type: string
          enum: [CCS2, Type2, CHAdeMO, GB_T]
          description: Physical connector type supported by this EVSE.
          example: CCS2
          x-jsonld: { "@id": connectorType }

        maxPowerKW:
          type: number
          minimum: 1
          maximum: 500
          description: Maximum output power of the connector (kW).
          example: 60
          x-jsonld: { "@id": maxPowerKW }

        minPowerKW:
          type: number
          minimum: 0
          maximum: 500
          description: Minimum controllable power if throttling supported (kW).
          example: 5
          x-jsonld: { "@id": minPowerKW }

        socketCount:
          type: integer
          minimum: 1
          description: Number of simultaneously usable outlets for this connector type.
          example: 2
          x-jsonld: { "@id": socketCount }

        reservationSupported:
          type: boolean
          default: true
          description: Whether advance reservations are supported.
          x-jsonld: { "@id": reservationSupported }

        paymentAccepted:
          type: array
          description: Accepted payment methods for this offer.
          items:
            type: string
            enum: [UPI, Card, Wallet, NetBanking, Cash]
          minItems: 1
          uniqueItems: true
          example: ["UPI", "Card", "Wallet"]
          x-jsonld: { "@id": paymentAccepted }

        # Location: REUSE Beckn Location (discover.yaml) via $ref
        serviceLocation:
          allOf:
            - $ref: "https://raw.githubusercontent.com/abhimail/beckn/refs/heads/main/protocol-enhancements/discover.yaml#/components/schemas/Location"
            - type: object
              description: Location of the charging site (reuses Beckn Location).
              x-jsonld: { "@id": serviceLocation }
          example:
            gps: "12.9153,77.6104"
            address:
              name: "EcoPower BTM Hub"
              locality: "100 Ft Rd"
              city: "Bengaluru"
              state: "KA"
              country: "IND"
              area_code: "560076"

        amenityFeature:
          type: array
          items: { type: string }
          description: Nearby amenities (e.g., Restaurant, Restroom, Wi-Fi).
          example: ["Restaurant", "Restroom"]
          x-jsonld: { "@id": amenityFeature }

        ocppId:
          type: string
          description: Site/CSMS identifier in OCPP backend.
          example: "IN-ECO-MDY-01"
          x-jsonld: { "@id": ocppId }

        evseId:
          type: string
          description: EVSE identifier (e.g., OCPI/Hubject style).
          example: "IN*ECO*01*CCS2*A"
          x-jsonld: { "@id": evseId }

        roamingNetwork:
          type: string
          description: Roaming network name if applicable.
          example: "GreenRoam"
          x-jsonld: { "@id": roamingNetwork }

        parkingType:
          type: string
          enum: [OnStreet, OffStreet, Basement, Mall, FuelStation, Office, Hotel]
          description: Parking context of the station.
          example: "Mall"
          x-jsonld: { "@id": parkingType }

        connectorId:
          type: string
          description: Provider-specific connector/socket id.
          example: "CCS2-A"
          x-jsonld: { "@id": connectorId }

        powerType:
          type: string
          enum: [AC_SINGLE_PHASE, AC_3_PHASE, DC]
          description: Electrical system type at the connector.
          example: "DC"
          x-jsonld: { "@id": powerType }

        connectorFormat:
          type: string
          enum: [SOCKET, CABLE]
          description: Whether the gun is tethered (CABLE) or socketed (SOCKET).
          example: "CABLE"
          x-jsonld: { "@id": connectorFormat }

        chargingSpeed:
          type: string
          enum: [SLOW, NORMAL, FAST, ULTRAFAST]
          description: Marketing band for comprehension.
          example: "FAST"
          x-jsonld: { "@id": chargingSpeed }

        stationStatus:
          type: string
          enum: [Available, Occupied, OutOfService]
          description: Near-real-time availability state.
          example: "Available"
          x-jsonld: { "@id": stationStatus }

    ########################################################################
    # OFFER.ATTRIBUTES — ChargingOffer (pruned; EV/commercial bits)
    ########################################################################
    ChargingOffer:
      type: object
      additionalProperties: false
      required: [priceSpecification]
      x-jsonld:
        "@context": ./context.jsonld
        "@type": ChargingOffer
      properties:

        # Detailed pricing basis (Offer has a price snapshot separately)
        priceSpecification:
          type: object
          description: Detailed pricing basis (separate from Offer.price snapshot).
          x-jsonld: { "@id": priceSpecification }
          additionalProperties: false
          properties:
            price:
              type: number
              minimum: 0
              description: Numeric price for the unit below.
              example: 18.0
              x-jsonld: { "@id": price }
            priceCurrency:
              type: string
              description: ISO 4217 currency code.
              example: "INR"
              x-jsonld: { "@id": priceCurrency }
            unitText:
              type: string
              enum: ["kWh", "minute", "hour", "month"]
              description: Unit for the quoted price.
              example: "kWh"
              x-jsonld: { "@id": unitText }
          required: [price, priceCurrency, unitText]

        # EV/commercial semantics not covered by core Offer
        paymentAccepted:
          type: string
          description: Human-readable accepted payment rails for this offer.
          example: "UPI, Card, Wallet"
          x-jsonld: { "@id": paymentAccepted }

        tariffModel:
          type: string
          enum: [PER_KWH, PER_MINUTE, SUBSCRIPTION, TIME_OF_DAY]
          description: Tariff model classification used by the provider.
          example: "PER_KWH"
          x-jsonld: { "@id": tariffModel }

        buyerFinderFee:
          type: object
          description: Commission payable by provider to the BAP for this offer.
          x-jsonld: { "@id": buyerFinderFee }
          additionalProperties: false
          properties:
            feeType:
              type: string
              enum: [PERCENTAGE, AMOUNT]
              example: "PERCENTAGE"
              x-jsonld: { "@id": feeType }
            feeValue:
              type: number
              minimum: 0
              example: 2.5
              x-jsonld: { "@id": feeValue }

        idleFeePolicy:
          type: string
          description: Human-readable policy for post-charge idle fees.
          example: "₹2/min after 10 min post-charge"
          x-jsonld: { "@id": idleFeePolicy }

    ########################################################################
    # ORDER/FULFILLMENT.ATTRIBUTES — ChargingSession (pruned)
    ########################################################################
    ChargingSession:
      type: object
      additionalProperties: false
      x-jsonld:
        "@context": ./context.jsonld
        "@type": ChargingSession
      properties:

        # Session state & authorization (EV-specific)
        sessionStatus:
          type: string
          enum: [PENDING, ACTIVE, COMPLETED, INTERRUPTED]
          description: High-level session state (order.state carries overall state).
          example: "ACTIVE"
          x-jsonld: { "@id": sessionStatus }

        authorizationMode:
          type: string
          enum: [APP_QR, RFID, OTP]
          description: Mode used to authorize/start the session.
          example: "APP_QR"
          x-jsonld: { "@id": authorizationMode }
        authorizationOtpHint:
          type: string
          description: Optional OTP or hint presented to user for kiosk entry.
          example: "Enter last 4 digits"
          x-jsonld: { "@id": authorizationOtpHint }

        # Technical lens for this session
        connectorType:
          type: string
          enum: [CCS2, Type2, CHAdeMO, GB_T]
          description: Connector used for this session (may differ from listing).
          example: "CCS2"
          x-jsonld: { "@id": connectorType }
        maxPowerKW:
          type: number
          minimum: 1
          description: Peak power observed/allowed for this session (kW).
          example: 60
          x-jsonld: { "@id": maxPowerKW }

        # Metered outputs (use meteredEnergyKWh as single source of truth)
        meteredEnergyKWh:
          type: number
          minimum: 0
          description: Total metered energy delivered (kWh).
          example: 13.6
          x-jsonld: { "@id": meteredEnergyKWh }
        meteredDurationMinutes:
          type: number
          minimum: 0
          description: Total metered session time in minutes.
          example: 35
          x-jsonld: { "@id": meteredDurationMinutes }

        # OCPI-like interval telemetry
        chargingPeriods:
          type: array
          description: OCPI-like intervals with telemetry dimensions.
          items:
            type: object
            additionalProperties: false
            properties:
              startDateTime:
                type: string
                format: date-time
                description: Interval start (UTC).
                x-jsonld: { "@id": "schema:startTime" }
              dimensions:
                type: array
                items:
                  type: object
                  additionalProperties: false
                  properties:
                    dimensionType:
                      type: string
                      enum: [ENERGY, POWER, CURRENT, VOLTAGE, STATE_OF_CHARGE]
                      description: Measured dimension type.
                      x-jsonld: { "@id": dimensionType }
                    volume:
                      type: number
                      description: Measured value for the dimension.
                      x-jsonld: { "@id": volume }

        # Billing summary specific to the session (Offer/Payment carry snapshots)
        totalCost:
          type: object
          description: Total session cost breakout.
          x-jsonld: { "@id": totalCost }
          additionalProperties: false
          properties:
            exclVat:
              type: number
              example: 245.0
              x-jsonld: { "@id": exclVat }
            inclVat:
              type: number
              example: 289.1
              x-jsonld: { "@id": inclVat }

        lastUpdated:
          type: string
          format: date-time
          description: Last telemetry/billing update timestamp (UTC).
          x-jsonld: { "@id": "schema:dateModified" }

        # Reservation/ops metadata
        reservationId:
          type: string
          description: Server-assigned reservation identifier.
          example: "RESV-984532"
          x-jsonld: { "@id": reservationId }
        gracePeriodMinutes:
          type: number
          minimum: 0
          description: Minutes allowed after scheduled start before releasing.
          example: 10
          x-jsonld: { "@id": gracePeriodMinutes }

        # Optional vehicle hints (operational analytics/space planning)
        vehicleMake:
          type: string
          description: Vehicle make/brand for the session (optional).
          example: "Tata"
          x-jsonld: { "@id": vehicleMake }
        vehicleModel:
          type: string
          description: Vehicle model for the session (optional).
          example: "Nexon EV"
          x-jsonld: { "@id": vehicleModel }

        # Tracking
        trackingId:
          type: string
          description: Provider tracking identifier for this session.
          example: "TRK-984532"
          x-jsonld: { "@id": trackingId }
        trackingUrl:
          type: string
          format: uri
          description: Live session dashboard URL.
          example: "https://cpo.example.org/session/RESV-984532"
          x-jsonld: { "@id": trackingUrl }
        trackingStatus:
          type: string
          enum: [ACTIVE, INACTIVE]
          description: Whether live tracking is currently active.
          example: "ACTIVE"
          x-jsonld: { "@id": trackingStatus }

    ########################################################################
    # PROVIDER.ATTRIBUTES — ChargingPointOperator (unchanged/minimal)
    ########################################################################
    ChargingPointOperator:
      type: object
      additionalProperties: false
      x-jsonld:
        "@context": ./context.jsonld
        "@type": ChargingPointOperator
      properties:
        operatorName:
          type: string
          description: Operating company name (display).
          example: "EcoPower Charging Pvt Ltd"
          x-jsonld: { "@id": operatorName }
        operatorCode:
          type: string
          description: Provider code as used in roaming/ops systems.
          example: "ECOPOWER"
          x-jsonld: { "@id": operatorCode }
        identifier:
          type: string
          description: Provider identifier (URN/URL/code).
          example: "urn:epc:provider:ecopower"
          x-jsonld: { "@id": identifier }
        sameAs:
          type: string
          format: uri
          description: Canonical reference (e.g., website, registry entry).
          example: "https://ecopower.example.org/about"
          x-jsonld: { "@id": sameAs }
        # keep or drop based on your core Provider contact policy
        supportEmail:
          type: string
          format: email
          description: Support email (if not provided in core Provider).
          example: "support@ecopower.example.org"
          x-jsonld: { "@id": supportEmail }
        supportPhone:
          type: string
          description: Support phone (if not provided in core Provider).
          example: "+91-90000-00000"
          x-jsonld: { "@id": supportPhone }
        gstNumber:
          type: string
          description: India GSTIN (if applicable).
          example: "29ABCDE1234F1Z5"
          x-jsonld: { "@id": gstNumber }
        cin:
          type: string
          description: India CIN (corporate identification number).
          example: "L12345KA2020PLC123456"
          x-jsonld: { "@id": cin }
        msme:
          type: string
          description: MSME/Udyam registration (if applicable).
          example: "UDYAM-KR-12-3456789"
          x-jsonld: { "@id": msme }
        operatorContact:
          type: object
          additionalProperties: true
          description: Free-form contact blob for ops (last resort).
          x-jsonld: { "@id": operatorContact }
