{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schemas.example.org/profiles/ev-charging/ev_charging/v1/profile.json",
  "title": "EV Charging â€” Charging Service Attribute Pack (v1)",
  "description": "Bundle of attribute schemas for EV charging: Item (ChargingService), Offer, Session (Order/Fulfillment), and Provider. Uses ./context.jsonld for JSON-LD mappings and ./vocab/ev.(jsonld|yaml) for ev: terms.",
  "type": "object",
  "additionalProperties": false,
  "$comment": "JSON-LD context: ./context.jsonld ; EV vocab: ./vocab/ev.jsonld",
  "properties": {
    "ChargingService": {
      "$ref": "./attributes.yaml#/components/schemas/ChargingService"
    },
    "ChargingOffer": {
      "$ref": "./attributes.yaml#/components/schemas/ChargingOffer"
    },
    "ChargingSession": {
      "$ref": "./attributes.yaml#/components/schemas/ChargingSession"
    },
    "ChargingProvider": {
      "$ref": "./attributes.yaml#/components/schemas/ChargingProvider"
    }
  },
  "required": ["ChargingService"],

  "operational_hints": {
    "indexHints": {
      "text": [
        "beckn:descriptor.name",
        "beckn:itemAttributes.category",
        "beckn:itemAttributes.connectorType",
        "beckn:itemAttributes.amenityFeature[]",
        "beckn:itemAttributes.parkingType",
        "beckn:offerAttributes.idleFeePolicy"
      ],
      "numeric": [
        "beckn:itemAttributes.maxPowerKW",
        "beckn:offerAttributes.priceSpecification.price"
      ],
      "keyword": [
        "beckn:itemAttributes.tariffModel",
        "beckn:itemAttributes.connectorFormat",
        "beckn:itemAttributes.powerType",
        "beckn:offerAttributes.priceSpecification.unitText",
        "beckn:offerAttributes.paymentAccepted[]"
      ],
      "geo": [
        "beckn:availableAt[].gps",
        "beckn:itemAttributes.serviceLocation.geo"
      ],
      "temporal": [
        "beckn:validity.start",
        "beckn:validity.end",
        "beckn:offerAttributes.validFrom",
        "beckn:offerAttributes.validThrough"
      ]
    },

    "piiHints": {
      "fields": [
        "message.order.billing.name",
        "message.order.billing.email",
        "message.order.billing.phone",
        "message.order.payments[].params.*"
      ],
      "treatment": "Do not index; redact in logs; encrypt at rest where stored.",
      "notes": "Discovery and catalog payloads generally contain no PII; PII appears post-transaction (confirm/status)."
    },

    "bulk_search": {
      "max_items": 1000,
      "max_offers_per_item": 1,
      "minimal_item_fields": [
        "beckn:id",
        "beckn:descriptor.name",
        "beckn:availableAt[].gps",
        "beckn:itemAttributes.category",
        "beckn:itemAttributes.connectorType",
        "beckn:itemAttributes.maxPowerKW",
        "beckn:itemAttributes.socketCount",
        "beckn:itemAttributes.stationStatus",
        "beckn:itemAttributes.amenityFeature[]",
        "beckn:itemAttributes.parkingType",
        "beckn:itemAttributes.tariffModel"
      ],
      "minimal_offer_fields": [
        "beckn:id",
        "beckn:price.currency",
        "beckn:price.value",
        "beckn:offerAttributes.priceSpecification.price",
        "beckn:offerAttributes.priceSpecification.priceCurrency",
        "beckn:offerAttributes.priceSpecification.unitText",
        "beckn:offerAttributes.idleFeePolicy",
        "beckn:offerAttributes.paymentAccepted[]",
        "beckn:validity.end"
      ],
      "notes": "Return the above for high-volume listings; include full attributes only on detail views or when explicitly requested."
    },

    "discover": {
      "supported_filters": [
        "text_search",
        "jsonpath_filters"
      ],
      "default_sort": [
        "distance.asc",
        "beckn:offerAttributes.priceSpecification.price.asc",
        "beckn:itemAttributes.maxPowerKW.desc"
      ],
      "schema_context": [
        "https://schemas.example.org/profiles/ev-charging/ev_charging/v1/context.jsonld"
      ],
      "examples_alignment": "Examples in ./examples and composed API samples map fields to these hints one-to-one."
    },

    "attribute_pack_minimums": {
      "ChargingService_minimal": [
        "category",
        "connectorType",
        "maxPowerKW",
        "socketCount",
        "stationStatus",
        "amenityFeature",
        "serviceLocation.geo",
        "tariffModel"
      ],
      "ChargingOffer_minimal": [
        "priceSpecification.price",
        "priceSpecification.priceCurrency",
        "priceSpecification.unitText",
        "tariffModel",
        "idleFeePolicy",
        "validThrough"
      ],
      "ChargingSession_minimal": [
        "reservationId",
        "sessionStatus",
        "kwh",
        "totalCost.inclVat",
        "currency",
        "lastUpdated"
      ],
      "notes": "These are the smallest practical subsets for quick cards/lists while remaining useful to end-users."
    }
  },

  "examples": [
    { "$ref": "./examples/item-example.json" },
    { "$ref": "./examples/offer-example.json" },
    { "$ref": "./examples/session-reservation.json" },
    { "$ref": "./examples/session-active.json" },
    { "$ref": "./examples/session-completed.json" }
  ]
}
